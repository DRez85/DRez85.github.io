{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>EGR 314 - Embedded Systems Design Project II</p> Front Side Back Side"},{"location":"#stem-cooling-system-project","title":"STEM Cooling System Project","text":"<p>Team Number: 303</p> <p>Team Members: Cade Clonts, Jahmel Garduno, Daniel Resnick</p> <p>Preparation Date: May 5th, 2025</p> <p>Semester and Year: Spring 2025</p> <p>University: Arizona State University</p> <p>Professor: K. Nichols</p>"},{"location":"#team-role","title":"Team Role","text":"<p>My role in the team will be to develop the fan system for the cooling system. This wil act as a simulation of a cooling system that will teach K-12 students how a fan may work in a computer or other type of electrical system. I will be using the PIC microcontroller to control a fan through a h bridge using SPI.</p>"},{"location":"#team-links","title":"Team Links","text":"Name Link Team Website link Cade Clonts link Daniel Resnick link"},{"location":"API/","title":"Summary","text":"<p>This API documentation provides details about the message structure, status codes, and message types used in the system. It includes tables for Message ID, Status, Message Types, Temperature Sensor (Message Type 1), and Fan Control (Message Type 2).</p>"},{"location":"API/#message-id","title":"Message ID","text":"<p>The Message ID table defines the unique identifiers for system members and their associated addresses. Each member is assigned a specific ID and address for communication within the system.</p> Member System ID Address Cade Clonts Wifi 1 0x01 Jahmel Human Interface 2 0x02 Tyler Temp Sensor 3 0x03 Dan Fan Control 4 0x04 Broadcast All 88 0x58"},{"location":"API/#status","title":"Status","text":"<p>The Status table defines the status codes used in the system to indicate the state of a message or operation.</p> Status Code Normal 0x00 Error 0x01"},{"location":"API/#message-types","title":"Message Types","text":"<p>The Message Types table categorizes the types of messages and their associated status or code ranges.</p> Category Status/Code Temp Data -40 to 155 Fan Control 0-125 System Status Normal (0x00), Error (0x01) System Initialize Pending (0x00), Complete (0x01) Error Error Code"},{"location":"API/#temperature-sensor-message-type-1","title":"Temperature Sensor (Message Type 1)","text":"<p>The Temperature Sensor table defines the structure of messages for temperature data. Each byte in the message is mapped to a specific variable, with details about its type, range, and example values.</p> Byte Variable Name Variable Type Min Value Max Value Example Value 1 prefix_1 uint8_t 0x41 0x41 0x41 2 prefix_2 uint8_t 0x5a 0x5a 0x5a 3 source_id uint8_t 3 3 0x03 4 destination_id uint8_t 1 88 0x58 5 message_type uint8_t 0x10 0x10 0x10 6 temp_id uint8_t 1 255 0x01 7 status uint8_t 0 1 0x01 8 temp_data_integer uint8_t -40 155 25 9 temp_data_fraction uint8_t 0 99 50 10-62 Unused uint8_t 0x00 0x00 0x00 63 suffix_1 uint8_t 0x59 0x59 0x59 64 suffix_2 uint8_t 0x42 0x42 0x42 Inverted Summary Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 8 Byte 9 Byte 10-62 Byte 63 Byte 64 Variable Name prefix_1 prefix_2 source_id destination_id message_type temp_id status temp_data_integer temp_data_fraction Unused suffix_1 suffix_2 Variable Type uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t int8_t uint8_t uint8_t uint8_t uint8_t Min Value 0x41 0x5A 3 1 0x10 1 0 -40 0 0x00 0x59 0x42 Max Value 0x41 0x5A 3 88 0x10 255 1 155 99 0x00 0x59 0x42 Example Value 0x41 0x5A 0x03 0x58 0x10 0x01 0x01 25 50 0x00 0x59 0x42"},{"location":"API/#fan-control-message-type-2","title":"Fan Control (Message Type 2)","text":"<p>The Fan Control table defines the structure of messages for controlling fan speed. Each byte in the message is mapped to a specific variable, with details about its type, range, and example values.</p> Byte Variable Name Variable Type Min Value Max Value Example Value 1 prefix_1 uint8_t 0x41 0x41 0x41 2 prefix_2 uint8_t 0x5a 0x5a 0x5a 3 source_id uint8_t 1 2 0x01 4 destination_id uint8_t 4 4 0x04 5 message_type uint8_t 0x02 0x02 0x02 6 fan_id uint8_t 1 255 0x02 7 status uint8_t 0 1 0x01 8 Fan Speed uint8_t 0 254 25 9-62 Unused uint8_t 0x00 0x00 0x00 63 suffix_1 uint8_t 0x59 0x59 0x59 64 suffix_2 uint8_t 0x42 0x42 0x42 Inverted Summary Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 8 Byte 9-62 Byte 63 Byte 64 Variable Name prefix_1 prefix_2 source_id destination_id message_type fan_id status fan_speed Unused suffix_1 suffix_2 Variable Type uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t uint8_t Min Value 0x41 0x5A 1 4 0x02 1 0 0 0x00 0x59 0x42 Max Value 0x41 0x5A 2 4 0x02 255 1 254 0x00 0x59 0x42 Example Value 0x41 0x5A 0x01 0x04 0x02 0x02 0x01 25 0x00 0x59 0x42"},{"location":"PIC18F27Q10-Table/","title":"PIC18F27Q10 Table","text":""},{"location":"PIC18F27Q10-Table/#pic18f27q10-information-table","title":"PIC18F27Q10 Information Table","text":"PIC18F27Q10 Info Answer Comments Model PIC18F27Q10-I/SO Product Page URL MircoChip PIC18F27Q10-I/SO Datasheet URL Datasheet Found on Microchip.com PIC18F27Q10-I/SO supplemental data sheet Datasheet Has more details on using Uart PIC18F27Q10-I/SO supplemental data sheet Datasheet Has details on using SPI for debugging PIC18F27Q10-I/SO supplemental data sheet Datasheet Has details on chaning GPIO function Vendor Link Digikey Code Examples Link All Code Examples Unit Cost $1.31 Absolute Maximum Current for entire IC 200mA as found in datasheet Supply Voltage Range 1.8V / 3.3V / 5.5V Min/Nominal/ Max, as found in datasheet Maximum GPIO current(per pin) 25mA as found in datasheet Supports External Interrupts? Yes as found in datasheet Required Programming Hardware, Cost, URL Link as found in datasheet"},{"location":"PIC18F27Q10-Table/#associated-pins","title":"Associated Pins","text":"Peripheral Availability Associated Pins UART Modules 2 modules Pins 17 (TX1), 18 (RX1), 27 (TX2), 28 (RX2) SPI Modules 2 modules Pins 14 (SCK1), 15 (SDI1), 16 (SDO1), 21 (SS2), 22 (SCK2), 23 (SDI2), 24 (SDO2), 26 (SS1) I2C Modules 2 modules Pins 14 (SCL1), 15 (SDA1), 22 (SCL2), 23 (SDA2) GPIO Pins 25 pins Pins 2-7, 9-13, 17-28 ADC Channels 10 channels Pins 2-7, 13, 25, 26, 27 PWM Outputs 3 outputs Pins 6, 7, 13 Power (VDD/GND) 2 VDD, 2 GND Pins 8 (GND), 19 (GND), 20 (VDD), 28 (VDD)"},{"location":"PIC18F27Q10-Table/#datasheet-references","title":"Datasheet References","text":""},{"location":"block-diagram/","title":"Overview","text":"<p>This document explains the block diagram and related design decisions for the Motor Driver Subsystem used in a daisy-chained UART-based embedded control system. The motor subsystem receives UART messages, decodes them using a PIC18F47Q10 microcontroller, and issues control commands via SPI to the IFX9201SGAUMA1 motor driver. All components and signal lines are clearly labeled with voltage, signal type, and pin counts to support manufacturing and debugging. The design addresses feedback and includes all required system-level elements such as power regulation, bidirectional ICSP, and future scalability.</p>"},{"location":"block-diagram/#changes-made-from-feedback","title":"Changes Made From Feedback","text":"<p>In regards to feedback from the first verion of the block diagram there were a few things that I changed. I added the correspoding pin that each component was connected to. In addition, Labels were added for digital, digital parallel and voltage. </p> <p></p>"},{"location":"board-design/","title":"Board Design","text":"<p>The schematic below details the acuator subsystem to control a fan through an H bridge. This design incorporates several key sections, to ensure that the fan subsystem works seemlessly with the other subsystems. It has 2 debugging LEDs to show that the fan is on and the direction it is moving. There are also testpoints incorporated in the design to ensure that correct voltage is getting to the components and that everything is grounded properly. A 3.3V regulator is also included to make sure that proper power is supplied throughout the circuitry. </p>"},{"location":"board-design/#schematic","title":"Schematic","text":"<ul> <li>Schematic PDF</li> </ul>"},{"location":"board-design/#pcb-design","title":"PCB Design","text":"<ul> <li>Gerber Files</li> </ul>"},{"location":"board-design/#bill-of-materials","title":"Bill of Materials","text":"<ul> <li>314_FanBOM.xlsx</li> </ul>"},{"location":"component-selection/","title":"Component Selection","text":""},{"location":"component-selection/#final-components-selected","title":"Final Components Selected","text":"Component Part Number Function Microcontroller PIC18F47Q10 Central control unit for UART, I2C, GPIO handling H Bridge IFX9201SGAUMA1 Controls Fan direction and speed Switching Regulator LM2575 Converts barrel jack input to 3.3V regulated supply Fan HA40101V4-1000U-A99 12V fan that is controlled by H brigde and microcontroller over SPI"},{"location":"component-selection/#microcontroller","title":"Microcontroller","text":"Solution Pros Cons  Solution 1 ESP32-S3-WROOM-1-N4 Cost: $2.95 Per Unit Link to Product - Faster Processing for complex tasks- Built in Wifi and Bluetooth 5 Connectivity- Larger memory storage - Higher Power Consumption- Complex Peripheral Management- Much more complex memory management  Solution 2 PIC18F27Q10-I/SO Cost: $1.31 Per Unit Link to Product - Simple and easy architecture to program- Multiple low power modes; overall low energy consumption- More Reliable for wired standalone subsystems - No built in wireless capabilities- Fewer advanced I/O options- Limited memory for advanced applications  Solution 3 PIC18F47Q10T-I/MP Cost: $3.85 Per Unit Link to Product - Faster Processing speed- Adjustable GPIO pins- 2 UART and 2 ICSP Pins - Slower processing speeds- No built in wifi or bluetooth modules- Requires complex PCB design for high frequency operation <p>Choice: Solution 2 - PIC18F27Q10-I/SO</p> <p>Rationale: The PIC18F27Q10-I/SO offers an excellent balance of versatility, functionality, and efficient use of board space. With a rich array of bidirectional I/O pins that support both digital and analog functions, along with configurable peripherals such as timers, communication interfaces, and the Peripheral Pin Select (PPS) feature, this module provides the flexibility needed to handle complex tasks and interface with various sensors and actuators. Additionally, the integration of low-power features and dedicated programming interfaces makes it ideal for projects requiring robust performance in energy-sensitive environments. This combination of features in a compact package ensures that the design is both scalable and cost-effective, meeting the project's performance and connectivity requirements without unnecessary complexity.</p>"},{"location":"component-selection/#voltage-regulator","title":"Voltage Regulator","text":"Solution Pros Cons  Solution 1 LM2575WU Cost: $3.95 Per Unit Link to Product - High Efficiency- High heat protection- Prior use in class with through hole version - Switch frequency make noise- Limited Stock  Solution 2 TPS75133QPWPR Cost: $4.12 Per Unit Link to Product - High Efficiency- High Temperature Range - Switch frequency make noise- Low dropout Voltage- 5.5 V Max Input  Solution 3 LM1085ISX-3.3/NOPB Cost: $1.84 Per Unit Link to Product - Larger Package Size - Wide Voltage Input Range - High dropout voltage <p>Choice: Solution 1 - LM2575WU</p> <p>Rationale: The LM2575WU was chosen as our voltage regulator due to its efficiency, reliability, and ease of integration in our power management system. As a step-down (buck) switching regulator, it efficiently converts higher input voltages, such as 9V, to a stable 3.3V output, ensuring optimal power delivery while minimizing heat dissipation compared to traditional linear regulators. With a wide input voltage range (4V to 40V) and a 1A output current capacity, it provides flexibility for various power sources and load conditions. Its internal frequency compensation, fixed 52kHz switching frequency, and minimal external component requirements simplify circuit design and reduce PCB space. Additionally, the integrated thermal shutdown and current limit protection enhance system safety and durability. Given our prior experience and familiarity with this regulator, its selection ensures a seamless and efficient voltage regulation solution for our project.</p>"},{"location":"component-selection/#motor-driver","title":"Motor Driver","text":"Solution Pros Cons  Solution 1 NCV7708FDWR2G  Cost: $ 4.36 per Unit Link to Product - Readily available - Fully integrated control and power. -Expensive  - 28 Pins may be difficult to solder.  Solution 2 IFX9201SGAUMA1 Cost $ 3.68 per unit Link to Product - Familiarity used in lab in class. - Uses SPI communication - Difficult to program"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}